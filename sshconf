#!/bin/zsh

VERSION=v11
FILENAME=${0##*/}
SSHDIR=${HOME}/.ssh
CONFDIR=${SSHDIR}/conf.d
CONFIG=${SSHDIR}/config

initialize() {
    local ORIGDIR=${CONFDIR}/10-original
    mkdir -p ${ORIGDIR}
    cp ${CONFIG} ${ORIGDIR}/config.sshconfig
    echo ${CONFIG} copy to ${ORIGDIR}/config.sshconfig
}

generate() {
    echo '## this file managed by ''sshconf''.' >! ${CONFIG}
    echo '## do not edit this file.' >> ${CONFIG}
    echo >> ${CONFIG}

    for CONFFILE in $(find ${CONFDIR} -name '*.sshconf' | sort -d)
    do {
        echo \#\# include: ${CONFFILE} | tee -a ${CONFIG}
        grep -v '^\s*#' ${CONFFILE} | grep -v '^\s*//' >> ${CONFIG}
        echo >> ${CONFIG}
    } done
}

check_syntax() {
    echo 'not impl'
}

docker_pregenerate() {
    local TARGETDIR="${CONFDIR}/88-docker"
    local TARGETFILE="10-docker-running.sshconf"
    rm -f "${TARGETDIR}/${TARGETFILE}" &> /dev/null
    mkdir -p ${TARGETDIR}
    touch "${TARGETDIR}/${TARGETFILE}"

    local IFS=$'\n'
    for CONTAINER in $(docker ps -q | xargs docker inspect -f "{{.Name}} {{.NetworkSettings.IPAddress }}")
    do {
        local HOST=$(echo ${CONTAINER} | cut -d' ' -f1 | cut -d'/' -f2)
        local HOSTNAME=$(echo ${CONTAINER} | cut -d' ' -f2)

        local USER=
        case "$HOST" in
            *ubuntu* ) {
                USER='ubuntu'
            } ;;

            *centos* ) {
                USER='centos'
            } ;;

            *amazonlinux* ) {
                USER='ec2-user'
            } ;;

            *awslinux* ) {
                USER='ec2-user'
            } ;;

            * ) {
                USER=$(whoami)
            } ;;
        esac

        cat <<EOS >> "${TARGETDIR}/${TARGETFILE}"
Host ${HOST}.docker
  Hostname ${HOSTNAME}
  Port 22
  User ${USER}

EOS
    } done

    local RESULT=$(cat ${TARGETDIR}/${TARGETFILE})
    cat <<EOS
generated config:

${RESULT}
EOS

}

lxc_pregenerate() {
    local TARGETDIR="${CONFDIR}/89-lxc"
    local TARGETFILE="10-lxc-running.sshconf"
    rm -f "${TARGETDIR}/${TARGETFILE}" &> /dev/null
    mkdir -p ${TARGETDIR}
    touch "${TARGETDIR}/${TARGETFILE}"

    local IFS=$'\n'
    for CONTAINER in $(lxc list --format csv)
    do {
        local RUNNING=$(echo ${CONTAINER} | cut -d',' -f2)
        if [[ "${RUNNING}" == "RUNNING" ]]; then {
            local HOST=$(echo ${CONTAINER} | cut -d',' -f1)
            local HOSTNAME=$(echo ${CONTAINER} | cut -d',' -f3 | cut -d' ' -f1)

            local USER=
            case "$HOST" in
                *ubuntu* ) {
                    USER='ubuntu'
                } ;;

                *centos* ) {
                    USER='centos'
                } ;;

                *amazonlinux* ) {
                    USER='ec2-user'
                } ;;

                *awslinux* ) {
                    USER='ec2-user'
                } ;;

                * ) {
                    USER=$(whoami)
                } ;;
            esac

            cat <<EOS >> "${TARGETDIR}/${TARGETFILE}"
Host ${HOST}.lxc
  Hostname ${HOSTNAME}
  Port 22
  User ${USER}

EOS
        } fi
    } done

    local RESULT=$(cat ${TARGETDIR}/${TARGETFILE})
    cat <<EOS
generated config:

${RESULT}
EOS
}

edit() {
    local _EDITOR=
    if [[ -z "$2" ]]; then {
        _EDITOR=${EDITOR}
    } else {
        _EDITOR="$2"
    } fi
    ${_EDITOR} ${CONFDIR}
}

man() {
    cat << EOS
${FILENAME} (-i|-g|-e|-v|-h) [OPTIONS]
  -i, --init, --initialize         : initialize ~/.ssh/conf.d
  -g, --gen,  --generate           : generate ~/.ssh/config
              --docker-pregenerate : pre-generate container of lxc to 88-docker/10-docker-running.sshconf
              --lxc-pregenerate    : pre-generate container of lxc to 89-lxc/10-lxc-running.sshconf
  -e,         --edit [editor]      : open ~/.ssh/conf.d in your favorite editor <3
  -t,         --check-syntax       : check syntax of *.sshconf
              --update             : update ${FILENAME}
  -v,         --version            : show version
  -h,         --help               : show help

OPTIONS:
              --with-root          : copy ~/.ssh/config to /root/.ssh/config when generate ssh config
EOS
}

version() {
    echo ${FILENAME} ${VERSION}
}

versioncheck() {
    local CURRENT_VERSION=$(echo ${VERSION} | cut -d'v' -f2)
    local REMOTE_VERSION=$(curl -L 'https://github.com/mohemohe/sshconf/raw/master/sshconf' 2>/dev/null | grep 'VERSION' | head -1 | cut -d'v' -f2)
    if [[ ${CURRENT_VERSION} -lt ${REMOTE_VERSION} ]]; then {
        cat << EOS

Update available!
${FILENAME} v${REMOTE_VERSION} has already released.

Run '${FILENAME} --update' to apply update.
EOS
    } fi
}

update() {
    local NEXT_SSHCONF=$(curl -L 'https://cdn.rawgit.com/mohemohe/sshconf/3526a0ad/sshconf' 2>/dev/null)
    local CURRENT_VERSION=$(echo ${VERSION} | cut -d'v' -f2)
    local REMOTE_VERSION=$(echo ${NEXT_SSHCONF} | grep 'VERSION' | head -1 | cut -d'v' -f2)
    if [[ ${CURRENT_VERSION} -lt ${REMOTE_VERSION} ]]; then {
        echo ${NEXT_SSHCONF} >! $(which sshconf)
    
        if [[ "$?" == "0" ]]; then {
            echo update successful.
        } else {
            echo update failed.
        } fi
    } fi
}

main() {
    local WITH_ROOT=

    case "$1" in
        "-h" | "--help" | "" ) man "$@" ;;
        "-v" | "--version" ) version "$@" ;;
        "-g" | "--gen" | "--generate" ) generate "$@" ;;
        "-t" | "--check-syntax" ) check_syntax "$@" ;;
        "--lxc-pregenerate" ) lxc_pregenerate "$@" ;;
        "--docker-pregenerate" ) docker_pregenerate "$@" ;;
        "--with-root" ) WITH_ROOT=true ;;
        "-i" | "--init" | "--initialize" ) initialize "$@" ;;
        "-e" | "--edit" ) edit "$@" ;;
        "--update" ) update "$@" ;;
        * ) {
                echo "${FILENAME} ${0##*/}: unrecognized option '$1'"
                echo "try '${FILENAME} -h' for more information."
            } ;;
    esac

    if [[ "${WITH_ROOT}" == "true" ]]; then {
        bash -c 'sudo cp -f ${HOME}/.ssh/config /root/.ssh/'
    } fi
    
    case "$1" in
        "--update" ) ;;
        * ) versioncheck ;;
    esac
}
main "$@"
