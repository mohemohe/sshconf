#!/bin/zsh

VERSION=v8
FILENAME=${0##*/}
SSHDIR=${HOME}/.ssh
CONFDIR=${SSHDIR}/conf.d
CONFIG=${SSHDIR}/config

initialize() {
    local ORIGDIR=${CONFDIR}/10-original
    mkdir -p ${ORIGDIR}
    cp ${CONFIG} ${ORIGDIR}/config.sshconfig
    echo ${CONFIG} copy to ${ORIGDIR}/config.sshconfig
}

generate() {
    echo '## this file managed by ''sshconf''.' >! ${CONFIG}
    echo '## do not edit this file.' >> ${CONFIG}
    echo >> ${CONFIG}

    for CONFFILE in `find ${CONFDIR} -name '*.sshconf'`
    do {
        echo \#\# include: ${CONFFILE} | tee -a ${CONFIG}
        grep -v '^\s*#' ${CONFFILE} | grep -v '^\s*//' >> ${CONFIG}
        echo >> ${CONFIG}
    } done
}

docker_pregenerate() {
    local TARGETDIR="${CONFDIR}/88-docker"
    local TARGETFILE="10-docker-running.sshconf"
    rm -f "${TARGETDIR}/${TARGETFILE}" &> /dev/null
    mkdir -p ${TARGETDIR}
    touch "${TARGETDIR}/${TARGETFILE}"

    local IFS=$'\n'
    for CONTAINER in `docker ps -q | xargs docker inspect -f "{{.Name}} {{.NetworkSettings.IPAddress }}"`
    do {
        local HOST=`echo ${CONTAINER} | cut -d' ' -f1 | cut -d'/' -f2`
        local HOSTNAME=`echo ${CONTAINER} | cut -d' ' -f2`

        local USER=
        case "$HOST" in
            *ubuntu* ) {
                USER='ubuntu'
            } ;;

            *centos* ) {
                USER='centos'
            } ;;

            *amazonlinux* ) {
                USER='ec2-user'
            } ;;

            *awslinux* ) {
                USER='ec2-user'
            } ;;

            * ) {
                USER=`whoami`
            } ;;
        esac

        cat <<EOS >> "${TARGETDIR}/${TARGETFILE}"
Host ${HOST}.docker
  Hostname ${HOSTNAME}
  Port 22
  User ${USER}

EOS
    } done

    local RESULT=`cat ${TARGETDIR}/${TARGETFILE}`
    cat <<EOS
generated config:

${RESULT}
EOS

}

lxc_pregenerate() {
    local TARGETDIR="${CONFDIR}/89-lxc"
    local TARGETFILE="10-lxc-running.sshconf"
    rm -f "${TARGETDIR}/${TARGETFILE}" &> /dev/null
    mkdir -p ${TARGETDIR}
    touch "${TARGETDIR}/${TARGETFILE}"

    local IFS=$'\n'
    for CONTAINER in `lxc list --format csv`
    do {
        local RUNNING=`echo ${CONTAINER} | cut -d',' -f2`
        if [[ "${RUNNING}" == "RUNNING" ]]; then {
            local HOST=`echo ${CONTAINER} | cut -d',' -f1`
            local HOSTNAME=`echo ${CONTAINER} | cut -d',' -f3 | cut -d' ' -f1`

            local USER=
            case "$HOST" in
                *ubuntu* ) {
                    USER='ubuntu'
                } ;;

                *centos* ) {
                    USER='centos'
                } ;;

                *amazonlinux* ) {
                    USER='ec2-user'
                } ;;

                *awslinux* ) {
                    USER='ec2-user'
                } ;;

                * ) {
                    USER=`whoami`
                } ;;
            esac

            cat <<EOS >> "${TARGETDIR}/${TARGETFILE}"
Host ${HOST}.lxc
  Hostname ${HOSTNAME}
  Port 22
  User ${USER}

EOS
        } fi
    } done

    local RESULT=`cat ${TARGETDIR}/${TARGETFILE}`
    cat <<EOS
generated config:

${RESULT}
EOS
}

edit() {
    local _EDITOR=
    if [[ -z "$2" ]]; then {
        _EDITOR=${EDITOR}
    } else {
        _EDITOR="$2"
    } fi
    ${_EDITOR} ${CONFDIR}
}

man() {
    cat << EOS
${FILENAME} (-i|-g|-e|-v|-h) [OPTIONS]
  -i, --init, --initialize         : initialize ~/.ssh/conf.d
  -g, --gen,  --generate           : generate ~/.ssh/config
              --docker-pregenerate : pre-generate container of lxc to 88-docker/10-docker-running.sshconf
              --lxc-pregenerate    : pre-generate container of lxc to 89-lxc/10-lxc-running.sshconf
  -e,         --edit [editor]      : open ~/.ssh/conf.d in your favorite editor <3
  -v,         --version            : show version
  -h,         --help               : show help

OPTIONS:
              --with-root          : copy ~/.ssh/config to /root/.ssh/config when generate ssh config
EOS
}

version() {
    echo ${FILENAME} ${VERSION}
}

main() {
    local WITH_ROOT=

    case "$1" in
        "-h" | "--help" | "" ) man "$@" ;;
        "-v" | "--version" ) version "$@" ;;
        "-g" | "--gen" | "--generate" ) generate "$@" ;;
        "--lxc-pregenerate" ) lxc_pregenerate "$@" ;;
        "--docker-pregenerate" ) docker_pregenerate "$@" ;;
        "--with-root" ) WITH_ROOT=true ;;
        "-i" | "--init" | "--initialize" ) initialize "$@" ;;
        "-e" | "--edit" ) edit "$@" ;;
        * ) {
                echo "${FILENAME} ${0##*/}: unrecognized option '$1'"
                echo "try '${FILENAME} -h' for more information."
            } ;;
    esac

    if [[ "${WITH_ROOT}" == "true" ]]; then {
        bash -c 'sudo cp -f ${HOME}/.ssh/config /root/.ssh/'
    } fi
}
main "$@"
